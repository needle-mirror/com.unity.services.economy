//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Economy.Editor.Authoring.AdminApi.Client.Http;


namespace Unity.Services.Economy.Editor.Authoring.AdminApi.Client.Models
{
    /// <summary>
    /// VirtualPurchaseResourceResponseCostsInner model
    /// </summary>
    [Preserve]
    [DataContract(Name = "virtual_purchase_resource_response_costs_inner")]
    internal class VirtualPurchaseResourceResponseCostsInner
    {
        /// <summary>
        /// Creates an instance of VirtualPurchaseResourceResponseCostsInner.
        /// </summary>
        /// <param name="resourceId">The ID of the currency or inventory item used as a cost.</param>
        /// <param name="amount">The amount of the resource deducted as part of the purchase.</param>
        [Preserve]
        public VirtualPurchaseResourceResponseCostsInner(string resourceId, long amount)
        {
            ResourceId = resourceId;
            Amount = amount;
        }

        /// <summary>
        /// The ID of the currency or inventory item used as a cost.
        /// </summary>
        [Preserve]
        [DataMember(Name = "resourceId", IsRequired = true, EmitDefaultValue = true)]
        public string ResourceId{ get; }

        /// <summary>
        /// The amount of the resource deducted as part of the purchase.
        /// </summary>
        [Preserve]
        [DataMember(Name = "amount", IsRequired = true, EmitDefaultValue = true)]
        public long Amount{ get; }

        /// <summary>
        /// Formats a VirtualPurchaseResourceResponseCostsInner into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (ResourceId != null)
            {
                serializedModel += "resourceId," + ResourceId + ",";
            }
            serializedModel += "amount," + Amount.ToString();
            return serializedModel;
        }

        /// <summary>
        /// Returns a VirtualPurchaseResourceResponseCostsInner as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (ResourceId != null)
            {
                var resourceIdStringValue = ResourceId.ToString();
                dictionary.Add("resourceId", resourceIdStringValue);
            }

            var amountStringValue = Amount.ToString();
            dictionary.Add("amount", amountStringValue);

            return dictionary;
        }
    }
}
